/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/VpZi9RO6anO
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Chivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
"use client"

import { useState } from "react"

export function newshare() {
  const [activeTab, setActiveTab] = useState("shareText")
  const [sharedText, setSharedText] = useState("")
  const [sharedPassword, setSharedPassword] = useState("")
  const [sharedFiles, setSharedFiles] = useState([])
  const [sharedFolders, setSharedFolders] = useState([])
  const [receivedMessages, setReceivedMessages] = useState([])
  const [confirmationMessage, setConfirmationMessage] = useState("")
  const handleTabChange = (tab) => {
    setActiveTab(tab)
  }
  const handleShareText = () => {
    setConfirmationMessage("Text shared successfully!")
    setReceivedMessages([...receivedMessages, { type: "text", content: sharedText }])
    setSharedText("")
  }
  const handleSharePassword = () => {
    setConfirmationMessage("Password shared successfully!")
    setReceivedMessages([...receivedMessages, { type: "password", content: sharedPassword }])
    setSharedPassword("")
  }
  const handleShareFiles = (files) => {
    setConfirmationMessage("Files shared successfully!")
    setSharedFiles(files)
    setReceivedMessages([...receivedMessages, { type: "files", content: files }])
  }
  const handleShareFolders = (folders) => {
    setConfirmationMessage("Folders shared successfully!")
    setSharedFolders(folders)
    setReceivedMessages([...receivedMessages, { type: "folders", content: folders }])
  }
  return (
    (<div className="flex flex-col h-screen">
      <div
        className="flex flex-col bg-background p-8 gap-8 mt-8 mx-auto w-[60%] rounded-md shadow-md">
        <div
          className="bg-primary text-primary-foreground py-2 px-4 flex justify-between items-center shadow-md">
          <nav className="flex gap-4">
            <button
              className={`px-4 py-2 rounded-t-md transition-colors ${
                activeTab === "shareText" ? "bg-primary-foreground text-primary" : "hover:bg-primary-foreground/20"
              }`}
              onClick={() => handleTabChange("shareText")}>
              Share Text
            </button>
            <button
              className={`px-4 py-2 rounded-t-md transition-colors ${
                activeTab === "sharePassword" ? "bg-primary-foreground text-primary" : "hover:bg-primary-foreground/20"
              }`}
              onClick={() => handleTabChange("sharePassword")}>
              Share Password
            </button>
            <button
              className={`px-4 py-2 rounded-t-md transition-colors ${
                activeTab === "shareFiles" ? "bg-primary-foreground text-primary" : "hover:bg-primary-foreground/20"
              }`}
              onClick={() => handleTabChange("shareFiles")}>
              Share Files
            </button>
            <button
              className={`px-4 py-2 rounded-t-md transition-colors ${
                activeTab === "shareFolders" ? "bg-primary-foreground text-primary" : "hover:bg-primary-foreground/20"
              }`}
              onClick={() => handleTabChange("shareFolders")}>
              Share Folders
            </button>
          </nav>
        </div>
        {confirmationMessage && (
          <div className="bg-green-500 text-green-50 p-4 rounded-md shadow-md">{confirmationMessage}</div>
        )}
        {activeTab === "shareText" && (
          <div className="flex flex-col gap-4">
            <textarea
              className="bg-muted text-muted-foreground p-4 rounded-md shadow-md resize-none"
              placeholder="Enter text to share"
              value={sharedText}
              onChange={(e) => setSharedText(e.target.value)} />
            <button
              className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors"
              onClick={handleShareText}>
              Share Text
            </button>
          </div>
        )}
        {activeTab === "sharePassword" && (
          <div className="flex flex-col gap-4">
            <input
              type="password"
              className="bg-muted text-muted-foreground p-4 rounded-md shadow-md"
              placeholder="Enter password to share"
              value={sharedPassword}
              onChange={(e) => setSharedPassword(e.target.value)} />
            <button
              className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors"
              onClick={handleSharePassword}>
              Share Password
            </button>
          </div>
        )}
        {activeTab === "shareFiles" && (
          <div className="flex flex-col gap-4">
            <div
              className="bg-muted text-muted-foreground p-4 rounded-md shadow-md flex items-center justify-center h-48 cursor-pointer">
              <div>
                <div className="text-center">
                  <p className="font-medium">Drag and drop files here</p>
                  <p className="text-sm text-muted-foreground">or click to select files</p>
                </div>
              </div>
            </div>
            <button
              className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors"
              onClick={() => handleShareFiles(sharedFiles)}>
              Share Files
            </button>
          </div>
        )}
        {activeTab === "shareFolders" && (
          <div className="flex flex-col gap-4">
            <div
              className="bg-muted text-muted-foreground p-4 rounded-md shadow-md flex items-center justify-center h-48 cursor-pointer">
              <div>
                <div className="text-center">
                  <p className="font-medium">Drag and drop folders here</p>
                  <p className="text-sm text-muted-foreground">or click to select folders</p>
                </div>
              </div>
            </div>
            <button
              className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors"
              onClick={() => handleShareFolders(sharedFolders)}>
              Share Folders
            </button>
          </div>
        )}
      </div>
      <div className="bg-muted text-muted-foreground p-8 flex flex-col gap-8 mt-8">
        <div>
          <h3 className="text-lg font-medium mb-2">Received Messages</h3>
          {receivedMessages.map((message, index) => (
            <div
              key={index}
              className="bg-background text-muted-foreground p-4 rounded-md shadow-md mb-2">
              {message.type === "text" && <p>{message.content}</p>}
              {message.type === "password" && <p>Password: {message.content}</p>}
              {message.type === "files" && (
                <div>
                  <p>Shared Files:</p>
                  <ul className="list-disc pl-4">
                    {message.content.map((file, fileIndex) => (
                      <li key={fileIndex}>{file.name}</li>
                    ))}
                  </ul>
                </div>
              )}
              {message.type === "folders" && (
                <div>
                  <p>Shared Folders:</p>
                  <ul className="list-disc pl-4">
                    {message.content.map((folder, folderIndex) => (
                      <li key={folderIndex}>{folder.name}</li>
                    ))}
                  </ul>
                </div>
              )}
            </div>
          ))}
        </div>
        <div className="flex justify-between">
          <div>
            <h3 className="text-lg font-medium mb-2">Access Options</h3>
            <div className="flex gap-4">
              <button
                className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors">
                Copy Link
              </button>
              <button
                className="bg-primary text-primary-foreground px-4 py-2 rounded-md shadow-md hover:bg-primary/90 transition-colors">
                Copy Code
              </button>
            </div>
          </div>
          <div className="flex gap-4">
            <button
              className="bg-red-500 text-red-50 px-4 py-2 rounded-md shadow-md hover:bg-red-500/90 transition-colors">
              Disconnect
            </button>
            <button
              className="bg-secondary text-secondary-foreground px-4 py-2 rounded-md shadow-md hover:bg-secondary/90 transition-colors">
              Back to Home
            </button>
          </div>
        </div>
      </div>
    </div>)
  );
}
